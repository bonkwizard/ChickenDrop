--game where animals fall from top player clicks
--before hit the bottom
--game ends when animal hits bottom

function love.load()
  chickenFace = love.graphics.newImage("chicken.png")
  backgroundImage = love.graphics.newImage("bg.png")
  slowBro = love.graphics.newImage("slow.png")

  math.randomseed(os.time())
  math.random(); math.random(); math.random()
  startx = {math.random(0, love.graphics.getWidth() - chickenFace:getWidth()), 
            math.random(0, love.graphics.getWidth() - chickenFace:getWidth()),  
            math.random(0, love.graphics.getWidth() - chickenFace:getWidth()),  
            math.random(0, love.graphics.getWidth() - chickenFace:getWidth()), 
            math.random(0, love.graphics.getWidth() - chickenFace:getWidth())}
  starty = {0 - math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2),
            0 - math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2),
            0 - math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2),
            0 - math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2),
            0 - math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2)}
  
  powerUpWidth = 0.1 * slowBro:getWidth()
  powerUpHeight = 0.1 * slowBro:getHeight()

  powerUpX = math.random(10, 500)
  powerUpY = math.random(10, 500)

  powerUpAppear = 1
  powerUpStart = 0
  powerUpDuration = 0
  powerUpCooldown = 0
  chickenSpeed = 200

end

-------------------------------------------------
--MOUSE PRESS
--1 = left, 2 = right, 3 = middle wheel
-------------------------------------------------
function love.mousepressed(x, y, button, istouch)
  if button == 1 then
    --print("left mouse clicked")
    for i, v in ipairs(startx) do
      --if the mouse x and y is within the boundary of a chicken picture
      if x >= startx[i] and x <= startx[i] + chickenFace:getWidth() and y >= starty[i] and y <= starty[i] + chickenFace:getHeight() then
        --print("in bounds")
        math.randomseed(os.time())
        math.random(); math.random(); math.random()
        --reset its y value (go back to the top)
        starty[i] = math.random(chickenFace:getHeight(), chickenFace:getHeight() * 2) * -1 
      end
      --if the mouse x and y is within the boundary of a power up picture
      if x >= powerUpX and x <= powerUpX + powerUpWidth and y >= powerUpY and y <= powerUpY + powerUpHeight then
        --print("in bounds")
        powerUpStart = 1
      end
    end
  end
end

-------------------------------------------------
--UPDATE
-------------------------------------------------
function love.update(dt)
  for i, v in ipairs(starty) do
    --if chicken hits the bottom of the screen, lua quits (we lose)
    if starty[i] + chickenFace:getHeight() >= love.graphics.getHeight() then
      --print("over the edge")
      love.event.quit()
    end
    --chickens move down 
    starty[i] = starty[i] + chickenSpeed * dt
  end
--start power up
  if powerUpStart == 1 then
    powerUpAppear = 1
    chickenSpeed = 20
    powerUpDuration = powerUpDuration + dt
    if powerUpDuration >= 5 then
      chickenSpeed = 200
      powerUpDuration = 0
      powerUpStart = 0
    end
  end
--start power up cooldown
  if powerUpAppear == 1 then
    powerUpCooldown = powerUpCooldown + dt
    if powerUpCooldown >= 10 then
      powerUpAppear = 0
      --reset its x and y value
      powerUpX = math.random(10, 500)
      powerUpY = math.random(10, 500)
      powerUpCooldown = 0
    end
  end
end

-------------------------------------------------
--DRAW
-------------------------------------------------
function love.draw()
  love.graphics.draw(backgroundImage, 0, 0)
  --draw each chicken at their respective x and y
  for i, v in ipairs(startx) do
    love.graphics.draw(chickenFace, startx[i], starty[i])
  end
  --draw power up
  if powerUpAppear == 0 then
    love.graphics.draw(slowBro, powerUpX, powerUpY, 0, 0.1, 0.1) 
  end
end
